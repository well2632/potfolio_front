// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for blog documents */
interface BlogDocumentData {
    /**
     * home field in *blog*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: blog.home[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    home: prismicT.GroupField<Simplify<BlogDocumentDataHomeItem>>;
}
/**
 * Item in blog → home
 *
 */
export interface BlogDocumentDataHomeItem {
    /**
     * titulo field in *blog → home*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blog.home[].titulo
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    titulo: prismicT.RichTextField;
}
/**
 * blog document from Prismic
 *
 * - **API ID**: `blog`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<BlogDocumentData>, "blog", Lang>;
export type AllDocumentTypes = BlogDocument;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { BlogDocumentData, BlogDocumentDataHomeItem, BlogDocument, AllDocumentTypes };
    }
}
